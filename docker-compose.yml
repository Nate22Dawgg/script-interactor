
version: '3.8'

services:
  # Frontend application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Backend API and WebSocket service
  backend:
    build:
      context: ./backend  # You'll need to create this folder with backend code
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - script-data:/app/scripts
    environment:
      - NODE_ENV=production
      - MAX_SCRIPT_SIZE=10485760  # 10MB
      - MAX_EXECUTION_TIME=300    # 5 minutes
      - ALLOWED_ORIGINS=https://your-domain.com
    depends_on:
      - redis
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G

  # Redis for caching and message queuing
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - monitoring-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  # Grafana for monitoring dashboards
  grafana:
    image: grafana/grafana:latest
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin_password
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - monitoring-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

networks:
  app-network:
    driver: bridge
  monitoring-network:
    driver: bridge

volumes:
  script-data:
  redis-data:
  prometheus-data:
  grafana-data:
